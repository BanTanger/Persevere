// --- Auto Generated by BanTanger ---
package com.bantanger.trigger.http.stock.seat;

import com.bantanger.api.stock.seat.request.SeatStockDetailCreateRequest;
import com.bantanger.api.stock.seat.request.SeatStockDetailQueryRequest;
import com.bantanger.api.stock.seat.request.SeatStockDetailUpdateRequest;
import com.bantanger.api.stock.seat.response.SeatStockDetailResponse;
import com.bantanger.common.enums.CodeEnum;
import com.bantanger.common.model.JsonObject;
import com.bantanger.common.model.PageRequestWrapper;
import com.bantanger.common.model.PageResult;
import com.bantanger.domain.stock.seat.creator.SeatStockDetailCreator;
import com.bantanger.domain.stock.seat.mapper.SeatStockDetailMapper;
import com.bantanger.domain.stock.seat.query.SeatStockDetailQuery;
import com.bantanger.domain.stock.seat.service.ISeatStockDetailService;
import com.bantanger.domain.stock.seat.updater.SeatStockDetailUpdater;
import com.bantanger.domain.stock.seat.vo.SeatStockDetailVO;
import java.lang.Long;
import java.lang.String;
import java.util.stream.Collectors;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@Slf4j
@RequestMapping("seatStockDetail/v1/")
@RequiredArgsConstructor
public class SeatStockDetailController {
   private final ISeatStockDetailService seatStockDetailService;

   /**
    * createRequest
    */
   @PostMapping("createSeatStockDetail")
   public JsonObject<Long> createSeatStockDetail(
         @RequestBody SeatStockDetailCreateRequest request) {
      SeatStockDetailCreator creator = SeatStockDetailMapper.INSTANCE.request2Dto(request);
      return JsonObject.success(seatStockDetailService.createSeatStockDetail(creator));
   }

   /**
    * update request
    */
   @PostMapping("updateSeatStockDetail")
   public JsonObject<String> updateSeatStockDetail(
         @RequestBody SeatStockDetailUpdateRequest request) {
      SeatStockDetailUpdater updater = SeatStockDetailMapper.INSTANCE.request2Updater(request);
      seatStockDetailService.updateSeatStockDetail(updater);
      return JsonObject.success(CodeEnum.Success.getName());
   }

   /**
    * valid
    */
   @PostMapping("valid/{id}")
   public JsonObject<String> validSeatStockDetail(@PathVariable Long id) {
      seatStockDetailService.validSeatStockDetail(id);
      return JsonObject.success(CodeEnum.Success.getName());
   }

   /**
    * invalid
    */
   @PostMapping("invalid/{id}")
   public JsonObject<String> invalidSeatStockDetail(@PathVariable Long id) {
      seatStockDetailService.invalidSeatStockDetail(id);
      return JsonObject.success(CodeEnum.Success.getName());
   }

   /**
    * findById
    */
   @GetMapping("findById/{id}")
   public JsonObject<SeatStockDetailResponse> findById(@PathVariable Long id) {
      SeatStockDetailVO vo = seatStockDetailService.findById(id);
      SeatStockDetailResponse response = SeatStockDetailMapper.INSTANCE.vo2CustomResponse(vo);
      return JsonObject.success(response);
   }

   /**
    * findByPage request
    */
   @PostMapping("findByPage")
   public JsonObject<PageResult<SeatStockDetailResponse>> findByPage(
         @RequestBody PageRequestWrapper<SeatStockDetailQueryRequest> request) {
      PageRequestWrapper<SeatStockDetailQuery> wrapper = new PageRequestWrapper<>();
      wrapper.setBean(SeatStockDetailMapper.INSTANCE.request2Query(request.getBean()));
      wrapper.setSorts(request.getSorts());
          wrapper.setPageSize(request.getPageSize());
          wrapper.setPage(request.getPage());
      Page<SeatStockDetailVO> page = seatStockDetailService.findByPage(wrapper);
      return JsonObject.success(
              PageResult.of(
                  page.getContent().stream()
                      .map(vo -> SeatStockDetailMapper.INSTANCE.vo2CustomResponse(vo))
                      .collect(Collectors.toList()),
                  page.getTotalElements(),
                  page.getSize(),
                  page.getNumber())
          );
   }
}
