// --- Auto Generated by BanTanger ---
package com.bantanger.trigger.http.asset;

import com.bantanger.api.asset.asset.request.AssetQueryRequest;
import com.bantanger.api.asset.asset.response.AssetResponse;
import com.bantanger.common.model.JsonObject;
import com.bantanger.common.model.PageRequestWrapper;
import com.bantanger.common.model.PageResult;
import com.bantanger.domain.asset.asset.mapper.AssetMapper;
import com.bantanger.domain.asset.asset.query.AssetQuery;
import com.bantanger.domain.asset.asset.service.IAssetService;
import com.bantanger.domain.asset.asset.vo.AssetVO;
import java.util.stream.Collectors;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@Slf4j
@RequestMapping("asset/v1/")
@RequiredArgsConstructor
public class AssetController {
   private final IAssetService assetService;

   /**
    * findById
    */
   @GetMapping("findById/{id}")
   public JsonObject<AssetResponse> findById(@PathVariable Long id) {
      AssetVO vo = assetService.findById(id);
      AssetResponse response = AssetMapper.INSTANCE.vo2CustomResponse(vo);
      return JsonObject.success(response);
   }

   /**
    * findByPage request
    */
   @PostMapping("findByPage")
   public JsonObject<PageResult<AssetResponse>> findByPage(
         @RequestBody PageRequestWrapper<AssetQueryRequest> request) {
      PageRequestWrapper<AssetQuery> wrapper = new PageRequestWrapper<>();
      wrapper.setBean(AssetMapper.INSTANCE.request2Query(request.getBean()));
      wrapper.setSorts(request.getSorts());
          wrapper.setPageSize(request.getPageSize());
          wrapper.setPage(request.getPage());
      Page<AssetVO> page = assetService.findByPage(wrapper);
      return JsonObject.success(
              PageResult.of(
                  page.getContent().stream()
                      .map(vo -> AssetMapper.INSTANCE.vo2CustomResponse(vo))
                      .collect(Collectors.toList()),
                  page.getTotalElements(),
                  page.getSize(),
                  page.getNumber())
          );
   }
}
