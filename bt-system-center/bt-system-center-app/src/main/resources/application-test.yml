server:
  port: 8091

# 线程池配置
thread:
  pool:
    executor:
      config:
        core-pool-size: 20
        max-pool-size: 50
        keep-alive-time: 5000
        block-queue-size: 5000
        policy: CallerRunsPolicy

spring:
  main: # 全局懒加载配置
    lazy-initialization: true  #默认false 关闭
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:h2:mem:system_center;MODE=MYSQL
    username: root
    password: 123456
    driverClassName: org.h2.Driver
  jpa:
    show-sql: true
    generate-ddl: true
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        generate_statistics: false
        jdbc:
          batch_size: 1000
        order_inserts: true
        hbm2ddl:
          auto: update

rocketmq:
  enhance:
    # 启动隔离，用于激活配置类EnvironmentIsolationConfig
    # 启动后会自动在topic上拼接激活的配置文件，达到自动隔离的效果
    enabledIsolation: true
    # 隔离环境名称，拼接到topic后，topic_dev，默认空字符串
    environment: test
  consumer:
    group: test_consumer_group
    # 一次拉取消息最大值，注意是拉取消息的最大值而非消费最大值
    pull-batch-size: 10
  name-server: 127.0.0.1:9876
  producer:
    # 发送同一类消息的设置为同一个group，保证唯一
    group: test_producer_group
    # 发送消息超时时间，默认3000
    sendMessageTimeout: 10000
    # 发送消息失败重试次数，默认2
    retryTimesWhenSendFailed: 2
    # 异步消息重试此处，默认2
    retryTimesWhenSendAsyncFailed: 2
    # 消息最大长度，默认1024 * 1024 * 4(默认4M)
    maxMessageSize: 4096
    # 压缩消息阈值，默认4k(1024 * 4)
    compressMessageBodyThreshold: 4096
    # 是否在内部发送失败时重试另一个broker，默认false
    retryNextServer: false

# redisson配置
redisson:
  # 如果该值为false，系统将不会创建RedissionClient的bean。
  enabled: true
  # mode的可用值为，single/cluster/sentinel/master-slave
  mode: single
  # single: 单机模式
  #   address: redis://localhost:6379
  # cluster: 集群模式
  #   每个节点逗号分隔，同时每个节点前必须以redis://开头。
  #   address: redis://localhost:6379,redis://localhost:6378,...
  # sentinel:
  #   每个节点逗号分隔，同时每个节点前必须以redis://开头。
  #   address: redis://localhost:6379,redis://localhost:6378,...
  # master-slave:
  #   每个节点逗号分隔，第一个为主节点，其余为从节点。同时每个节点前必须以redis://开头。
  #   address: redis://localhost:6379,redis://localhost:6378,...
  address: redis://127.0.0.1:6379
  # redis 密码，空可以不填。
  password:
  database: 0

# 数据库配置
#spring:
#  datasource:
#    username: root
#    password: 123456
#    url: jdbc:mysql://127.0.0.1:3306/xfg_frame_archetype?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  hikari:
#    pool-name: Retail_HikariCP
#    minimum-idle: 15 #最小空闲连接数量
#    idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）
#    maximum-pool-size: 25 #连接池最大连接数，默认是10
#    auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true
#    max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
#    connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000
#    connection-test-query: SELECT 1
#  type: com.zaxxer.hikari.HikariDataSource

#mybatis:
#  mapper-locations: classpath:/mybatis/mapper/*.xml
#  config-location:  classpath:/mybatis/config/mybatis-config.xml

# 日志
logging:
  level:
    '[net.ttddyy.dsproxy.listener]': debug
    root: info
    RocketmqClient: ERROR
    io:
      netty: ERROR
  config: classpath:logback-spring.xml