// --- Auto Generated by BanTanger ---
package com.bantanger.domain.template.objecttemplate.mapper;

import com.bantanger.api.template.objecttemplate.request.ObjectTemplateCreateRequest;
import com.bantanger.api.template.objecttemplate.request.ObjectTemplateQueryRequest;
import com.bantanger.api.template.objecttemplate.request.ObjectTemplateUpdateRequest;
import com.bantanger.api.template.objecttemplate.response.ObjectTemplateResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.template.objecttemplate.ObjectTemplate;
import com.bantanger.domain.template.objecttemplate.creator.ObjectTemplateCreator;
import com.bantanger.domain.template.objecttemplate.query.ObjectTemplateQuery;
import com.bantanger.domain.template.objecttemplate.updater.ObjectTemplateUpdater;
import com.bantanger.domain.template.objecttemplate.vo.ObjectTemplateVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
      uses = {
            GenericEnumMapper.class,
            DateMapper.class
      }
)
public interface ObjectTemplateMapper {
   ObjectTemplateMapper INSTANCE = Mappers.getMapper(ObjectTemplateMapper.class);

   ObjectTemplate dtoToEntity(ObjectTemplateCreator dto);

   ObjectTemplateUpdater request2Updater(ObjectTemplateUpdateRequest request);

   ObjectTemplateCreator request2Dto(ObjectTemplateCreateRequest request);

   ObjectTemplateQuery request2Query(ObjectTemplateQueryRequest request);

   ObjectTemplateResponse vo2Response(ObjectTemplateVO vo);

   default ObjectTemplateResponse vo2CustomResponse(ObjectTemplateVO vo) {
      ObjectTemplateResponse response = vo2Response(vo);
      return response;
   }
}
