// --- Auto Generated by BanTanger ---
package com.bantanger.domain.trade.reviserecord.mapper;

import com.bantanger.api.trade.reviserecord.request.ReviseRecordCreateRequest;
import com.bantanger.api.trade.reviserecord.request.ReviseRecordQueryRequest;
import com.bantanger.api.trade.reviserecord.request.ReviseRecordUpdateRequest;
import com.bantanger.api.trade.reviserecord.response.ReviseRecordResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.trade.reviserecord.ReviseRecord;
import com.bantanger.domain.trade.reviserecord.creator.ReviseRecordCreator;
import com.bantanger.domain.trade.reviserecord.query.ReviseRecordQuery;
import com.bantanger.domain.trade.reviserecord.updater.ReviseRecordUpdater;
import com.bantanger.domain.trade.reviserecord.vo.ReviseRecordVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
      uses = {
            GenericEnumMapper.class,
            DateMapper.class
      }
)
public interface ReviseRecordMapper {
   ReviseRecordMapper INSTANCE = Mappers.getMapper(ReviseRecordMapper.class);

   ReviseRecord dtoToEntity(ReviseRecordCreator dto);

   ReviseRecordUpdater request2Updater(ReviseRecordUpdateRequest request);

   ReviseRecordCreator request2Dto(ReviseRecordCreateRequest request);

   ReviseRecordQuery request2Query(ReviseRecordQueryRequest request);

   ReviseRecordResponse vo2Response(ReviseRecordVO vo);

   default ReviseRecordResponse vo2CustomResponse(ReviseRecordVO vo) {
      ReviseRecordResponse response = vo2Response(vo);
      return response;
   }
}
