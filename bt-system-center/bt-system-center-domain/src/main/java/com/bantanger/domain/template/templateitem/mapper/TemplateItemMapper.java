// --- Auto Generated by BanTanger ---
package com.bantanger.domain.template.templateitem.mapper;

import com.bantanger.api.template.templateitem.request.TemplateItemCreateRequest;
import com.bantanger.api.template.templateitem.request.TemplateItemQueryRequest;
import com.bantanger.api.template.templateitem.request.TemplateItemUpdateRequest;
import com.bantanger.api.template.templateitem.response.TemplateItemResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.CustomMapper;
import com.bantanger.domain.template.templateitem.TemplateItem;
import com.bantanger.domain.template.templateitem.creator.TemplateItemCreator;
import com.bantanger.domain.template.templateitem.query.TemplateItemQuery;
import com.bantanger.domain.template.templateitem.updater.TemplateItemUpdater;
import com.bantanger.domain.template.templateitem.vo.TemplateItemVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class,
        CustomMapper.class
    }
)
public interface TemplateItemMapper {

    TemplateItemMapper INSTANCE = Mappers.getMapper(TemplateItemMapper.class);

    TemplateItem dtoToEntity(TemplateItemCreator dto);

    TemplateItemUpdater request2Updater(TemplateItemUpdateRequest request);

    TemplateItemCreator request2Dto(TemplateItemCreateRequest request);

    TemplateItemQuery request2Query(TemplateItemQueryRequest request);

    TemplateItemResponse vo2Response(TemplateItemVO vo);

    default TemplateItemResponse vo2CustomResponse(TemplateItemVO vo) {
        TemplateItemResponse response = vo2Response(vo);
        return response;
    }
}
