// --- Auto Generated by BanTanger ---
package com.bantanger.domain.template.objecttemplate.mapper;

import com.bantanger.api.template.objecttemplate.request.TemplateCategoryCreateRequest;
import com.bantanger.api.template.objecttemplate.request.TemplateCategoryQueryRequest;
import com.bantanger.api.template.objecttemplate.request.TemplateCategoryUpdateRequest;
import com.bantanger.api.template.objecttemplate.response.TemplateCategoryResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.template.objecttemplate.TemplateCategory;
import com.bantanger.domain.template.objecttemplate.creator.TemplateCategoryCreator;
import com.bantanger.domain.template.objecttemplate.query.TemplateCategoryQuery;
import com.bantanger.domain.template.objecttemplate.updater.TemplateCategoryUpdater;
import com.bantanger.domain.template.objecttemplate.vo.TemplateCategoryVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
      uses = {
            GenericEnumMapper.class,
            DateMapper.class
      }
)
public interface TemplateCategoryMapper {
   TemplateCategoryMapper INSTANCE = Mappers.getMapper(TemplateCategoryMapper.class);

   TemplateCategory dtoToEntity(TemplateCategoryCreator dto);

   TemplateCategoryUpdater request2Updater(TemplateCategoryUpdateRequest request);

   TemplateCategoryCreator request2Dto(TemplateCategoryCreateRequest request);

   TemplateCategoryQuery request2Query(TemplateCategoryQueryRequest request);

   TemplateCategoryResponse vo2Response(TemplateCategoryVO vo);

   default TemplateCategoryResponse vo2CustomResponse(TemplateCategoryVO vo) {
      TemplateCategoryResponse response = vo2Response(vo);
      return response;
   }
}
