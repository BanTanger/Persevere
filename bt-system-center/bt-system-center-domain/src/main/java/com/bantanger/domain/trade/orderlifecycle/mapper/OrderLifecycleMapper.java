// --- Auto Generated by BanTanger ---
package com.bantanger.domain.trade.orderlifecycle.mapper;

import com.bantanger.api.trade.orderlifecycle.request.OrderLifecycleCreateRequest;
import com.bantanger.api.trade.orderlifecycle.request.OrderLifecycleQueryRequest;
import com.bantanger.api.trade.orderlifecycle.request.OrderLifecycleUpdateRequest;
import com.bantanger.api.trade.orderlifecycle.response.OrderLifecycleResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.trade.orderlifecycle.OrderLifecycle;
import com.bantanger.domain.trade.orderlifecycle.creator.OrderLifecycleCreator;
import com.bantanger.domain.trade.orderlifecycle.query.OrderLifecycleQuery;
import com.bantanger.domain.trade.orderlifecycle.updater.OrderLifecycleUpdater;
import com.bantanger.domain.trade.orderlifecycle.vo.OrderLifecycleVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
      uses = {
            GenericEnumMapper.class,
            DateMapper.class
      }
)
public interface OrderLifecycleMapper {
   OrderLifecycleMapper INSTANCE = Mappers.getMapper(OrderLifecycleMapper.class);

   OrderLifecycle dtoToEntity(OrderLifecycleCreator dto);

   OrderLifecycleUpdater request2Updater(OrderLifecycleUpdateRequest request);

   OrderLifecycleCreator request2Dto(OrderLifecycleCreateRequest request);

   OrderLifecycleQuery request2Query(OrderLifecycleQueryRequest request);

   OrderLifecycleResponse vo2Response(OrderLifecycleVO vo);

   default OrderLifecycleResponse vo2CustomResponse(OrderLifecycleVO vo) {
      OrderLifecycleResponse response = vo2Response(vo);
      return response;
   }
}
