// --- Auto Generated by BanTanger ---
package com.bantanger.domain.template.selectdict.mapper;

import com.bantanger.api.template.selectdict.request.SelectDictCreateRequest;
import com.bantanger.api.template.selectdict.request.SelectDictQueryRequest;
import com.bantanger.api.template.selectdict.request.SelectDictUpdateRequest;
import com.bantanger.api.template.selectdict.response.SelectDictResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.CustomMapper;
import com.bantanger.domain.template.selectdict.SelectDict;
import com.bantanger.domain.template.selectdict.creator.SelectDictCreator;
import com.bantanger.domain.template.selectdict.query.SelectDictQuery;
import com.bantanger.domain.template.selectdict.updater.SelectDictUpdater;
import com.bantanger.domain.template.selectdict.vo.SelectDictVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class,
        CustomMapper.class
    }
)
public interface SelectDictMapper {

    SelectDictMapper INSTANCE = Mappers.getMapper(SelectDictMapper.class);

    SelectDict dtoToEntity(SelectDictCreator dto);

    SelectDictUpdater request2Updater(SelectDictUpdateRequest request);

    SelectDictCreator request2Dto(SelectDictCreateRequest request);

    SelectDictQuery request2Query(SelectDictQueryRequest request);

    SelectDictResponse vo2Response(SelectDictVO vo);

    default SelectDictResponse vo2CustomResponse(SelectDictVO vo) {
        SelectDictResponse response = vo2Response(vo);
        return response;
    }
}
