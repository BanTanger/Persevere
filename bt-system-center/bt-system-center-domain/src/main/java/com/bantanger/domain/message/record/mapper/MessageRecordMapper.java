// --- Auto Generated by BanTanger ---
package com.bantanger.domain.message.record.mapper;

import com.bantanger.api.message.record.request.MessageRecordCreateRequest;
import com.bantanger.api.message.record.request.MessageRecordQueryRequest;
import com.bantanger.api.message.record.request.MessageRecordUpdateRequest;
import com.bantanger.api.message.record.response.MessageRecordResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.CustomMapper;
import com.bantanger.domain.message.record.MessageRecord;
import com.bantanger.domain.message.record.creator.MessageRecordCreator;
import com.bantanger.domain.message.record.domainservice.model.MessageSendModel;
import com.bantanger.domain.message.record.query.MessageRecordQuery;
import com.bantanger.domain.message.record.updater.MessageRecordUpdater;
import com.bantanger.domain.message.record.vo.MessageRecordVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class,
        CustomMapper.class
    }
)
public interface MessageRecordMapper {

    MessageRecordMapper INSTANCE = Mappers.getMapper(MessageRecordMapper.class);

    MessageRecord dtoToEntity(MessageRecordCreator dto);

    MessageRecordUpdater request2Updater(MessageRecordUpdateRequest request);

    MessageRecordCreator request2Dto(MessageRecordCreateRequest request);

    MessageRecordQuery request2Query(MessageRecordQueryRequest request);

    MessageRecordResponse vo2Response(MessageRecordVO vo);

    MessageRecord model2Entity(MessageSendModel sendModel);

    default MessageRecordResponse vo2CustomResponse(MessageRecordVO vo) {
        MessageRecordResponse response = vo2Response(vo);
        return response;
    }
}
