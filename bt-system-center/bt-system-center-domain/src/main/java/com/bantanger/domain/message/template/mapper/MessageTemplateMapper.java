// --- Auto Generated by BanTanger ---
package com.bantanger.domain.message.template.mapper;

import com.bantanger.api.message.template.request.MessageTemplateCreateRequest;
import com.bantanger.api.message.template.request.MessageTemplateQueryRequest;
import com.bantanger.api.message.template.request.MessageTemplateUpdateRequest;
import com.bantanger.api.message.template.response.MessageTemplateResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.CustomMapper;
import com.bantanger.domain.message.template.MessageTemplate;
import com.bantanger.domain.message.template.creator.MessageTemplateCreator;
import com.bantanger.domain.message.template.query.MessageTemplateQuery;
import com.bantanger.domain.message.template.updater.MessageTemplateUpdater;
import com.bantanger.domain.message.template.vo.MessageTemplateVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
        uses = {
                GenericEnumMapper.class,
                DateMapper.class,
                CustomMapper.class
        }
)
public interface MessageTemplateMapper {
   MessageTemplateMapper INSTANCE = Mappers.getMapper(MessageTemplateMapper.class);

   MessageTemplate dtoToEntity(MessageTemplateCreator dto);

   MessageTemplateUpdater request2Updater(MessageTemplateUpdateRequest request);

   MessageTemplateCreator request2Dto(MessageTemplateCreateRequest request);

   MessageTemplateQuery request2Query(MessageTemplateQueryRequest request);

   MessageTemplateResponse vo2Response(MessageTemplateVO vo);

   default MessageTemplateResponse vo2CustomResponse(MessageTemplateVO vo) {
      MessageTemplateResponse response = vo2Response(vo);
      return response;
   }
}
