// --- Auto Generated by BanTanger ---
package com.bantanger.domain.trade.order.mapper;

import com.bantanger.api.trade.order.request.OrderBaseCreateRequest;
import com.bantanger.api.trade.order.request.OrderBaseQueryRequest;
import com.bantanger.api.trade.order.request.OrderBaseUpdateRequest;
import com.bantanger.api.trade.order.response.OrderBaseResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.CustomMapper;
import com.bantanger.domain.trade.order.OrderBase;
import com.bantanger.domain.trade.order.creator.OrderBaseCreator;
import com.bantanger.domain.trade.order.domainservice.model.OrderCreateModel;
import com.bantanger.domain.trade.order.query.OrderBaseQuery;
import com.bantanger.domain.trade.order.updater.OrderBaseUpdater;
import com.bantanger.domain.trade.order.vo.OrderBaseVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class,
        CustomMapper.class
    }
)
public interface OrderBaseMapper {

    OrderBaseMapper INSTANCE = Mappers.getMapper(OrderBaseMapper.class);

    OrderBase dtoToEntity(OrderBaseCreator dto);

    OrderBaseUpdater request2Updater(OrderBaseUpdateRequest request);

    OrderBaseCreator request2Dto(OrderBaseCreateRequest request);

    OrderBaseQuery request2Query(OrderBaseQueryRequest request);

    OrderBaseResponse vo2Response(OrderBaseVO vo);

    OrderBase model2Entity(OrderCreateModel createModel);

    default OrderBaseResponse vo2CustomResponse(OrderBaseVO vo) {
        OrderBaseResponse response = vo2Response(vo);
        return response;
    }
}
