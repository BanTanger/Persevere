// --- Auto Generated by BanTanger ---
package com.bantanger.domain.asset.lifecycle.mapper;

import com.bantanger.api.asset.lifecycle.request.AssetLifecycleCreateRequest;
import com.bantanger.api.asset.lifecycle.request.AssetLifecycleQueryRequest;
import com.bantanger.api.asset.lifecycle.request.AssetLifecycleUpdateRequest;
import com.bantanger.api.asset.lifecycle.response.AssetLifecycleResponse;
import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.domain.CustomMapper;
import com.bantanger.domain.asset.lifecycle.AssetLifecycle;
import com.bantanger.domain.asset.lifecycle.creator.AssetLifecycleCreator;
import com.bantanger.domain.asset.lifecycle.query.AssetLifecycleQuery;
import com.bantanger.domain.asset.lifecycle.updater.AssetLifecycleUpdater;
import com.bantanger.domain.asset.lifecycle.vo.AssetLifecycleVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class,
        CustomMapper.class
    }
)
public interface AssetLifecycleMapper {

    AssetLifecycleMapper INSTANCE = Mappers.getMapper(AssetLifecycleMapper.class);

    AssetLifecycle dtoToEntity(AssetLifecycleCreator dto);

    AssetLifecycleUpdater request2Updater(AssetLifecycleUpdateRequest request);

    AssetLifecycleCreator request2Dto(AssetLifecycleCreateRequest request);

    AssetLifecycleQuery request2Query(AssetLifecycleQueryRequest request);

    AssetLifecycleResponse vo2Response(AssetLifecycleVO vo);

    default AssetLifecycleResponse vo2CustomResponse(AssetLifecycleVO vo) {
        AssetLifecycleResponse response = vo2Response(vo);
        return response;
    }
}
